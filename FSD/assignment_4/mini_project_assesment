import React, { useState, useEffect } from 'react';
import { Play, Info, ChevronLeft, ChevronRight } from 'lucide-react';

export default function NetflixLanding() {
  const [scrolled, setScrolled] = useState(false);
  const [email, setEmail] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('trending');
  const [currentSlide, setCurrentSlide] = useState(0);

  useEffect(() => {
    const handleScroll = () => {
      setScrolled(window.scrollY > 50);
    };
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const categories = [
    { id: 'trending', name: 'Trending Now' },
    { id: 'action', name: 'Action' },
    { id: 'drama', name: 'Drama' },
    { id: 'comedy', name: 'Comedy' },
  ];

  const movies = {
    trending: [
      { id: 1, title: 'Dark Horizon', color: 'from-purple-900 to-blue-900' },
      { id: 2, title: 'City Lights', color: 'from-yellow-600 to-orange-700' },
      { id: 3, title: 'Ocean Deep', color: 'from-blue-600 to-cyan-500' },
      { id: 4, title: 'Red Dawn', color: 'from-red-700 to-pink-600' },
      { id: 5, title: 'Forest Tales', color: 'from-green-700 to-emerald-600' },
      { id: 6, title: 'Neon Nights', color: 'from-pink-600 to-purple-700' },
    ],
    action: [
      { id: 7, title: 'Thunder Strike', color: 'from-gray-800 to-gray-900' },
      { id: 8, title: 'Velocity', color: 'from-red-600 to-black' },
      { id: 9, title: 'Steel Force', color: 'from-slate-700 to-zinc-800' },
      { id: 10, title: 'Night Ops', color: 'from-blue-900 to-black' },
      { id: 11, title: 'Combat Zone', color: 'from-orange-700 to-red-900' },
      { id: 12, title: 'Rapid Fire', color: 'from-yellow-600 to-red-700' },
    ],
    drama: [
      { id: 13, title: 'Silent Hearts', color: 'from-rose-800 to-purple-900' },
      { id: 14, title: 'The Last Song', color: 'from-indigo-800 to-purple-900' },
      { id: 15, title: 'Autumn Days', color: 'from-amber-700 to-orange-800' },
      { id: 16, title: 'Whispers', color: 'from-gray-700 to-slate-800' },
      { id: 17, title: 'Broken Wings', color: 'from-blue-800 to-indigo-900' },
      { id: 18, title: 'Memories', color: 'from-teal-700 to-cyan-800' },
    ],
    comedy: [
      { id: 19, title: 'Laugh Out Loud', color: 'from-yellow-500 to-orange-500' },
      { id: 20, title: 'Funny Business', color: 'from-pink-500 to-rose-500' },
      { id: 21, title: 'Comedy Gold', color: 'from-amber-500 to-yellow-600' },
      { id: 22, title: 'Silly Times', color: 'from-lime-500 to-green-600' },
      { id: 23, title: 'Jokes Aside', color: 'from-cyan-500 to-blue-600' },
      { id: 24, title: 'Happy Hour', color: 'from-fuchsia-500 to-purple-600' },
    ],
  };

  const heroSlides = [
    { title: 'Stellar Odyssey', desc: 'An epic journey across the cosmos', color: 'from-indigo-900 via-purple-900 to-pink-900' },
    { title: 'Urban Legends', desc: 'Stories from the heart of the city', color: 'from-slate-900 via-gray-800 to-zinc-900' },
    { title: 'Wild Frontier', desc: 'Adventure awaits in the untamed lands', color: 'from-emerald-900 via-teal-800 to-cyan-900' },
  ];

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % heroSlides.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + heroSlides.length) % heroSlides.length);
  };

  useEffect(() => {
    const timer = setInterval(nextSlide, 5000);
    return () => clearInterval(timer);
  }, []);

  return (
    <div className="bg-black text-white min-h-screen">
      {/* Header */}
      <header className={fixed top-0 w-full z-50 transition-all duration-300 ${scrolled ? 'bg-black' : 'bg-gradient-to-b from-black/80 to-transparent'}}>
        <div className="max-w-7xl mx-auto px-4 py-4 flex items-center justify-between">
          <h1 className="text-red-600 text-3xl font-bold tracking-tight">NETFLIX</h1>
          <div className="flex items-center gap-6">
            <button className="text-sm hover:text-gray-300 transition">Sign In</button>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <div className="relative h-screen overflow-hidden">
        {heroSlides.map((slide, idx) => (
          <div
            key={idx}
            className={absolute inset-0 transition-opacity duration-1000 ${idx === currentSlide ? 'opacity-100' : 'opacity-0'}}
          >
            <div className={absolute inset-0 bg-gradient-to-r ${slide.color}} />
            <div className="absolute inset-0 bg-gradient-to-t from-black via-transparent to-transparent" />
            <div className="relative h-full max-w-7xl mx-auto px-4 flex flex-col justify-center">
              <h2 className="text-6xl md:text-8xl font-bold mb-4 animate-fade-in">{slide.title}</h2>
              <p className="text-xl md:text-2xl mb-8 max-w-xl animate-fade-in">{slide.desc}</p>
              <div className="flex gap-4 animate-fade-in">
                <button className="bg-white text-black px-8 py-3 rounded flex items-center gap-2 font-semibold hover:bg-gray-200 transition transform hover:scale-105">
                  <Play size={24} fill="black" />
                  Play
                </button>
                <button className="bg-gray-600/80 px-8 py-3 rounded flex items-center gap-2 font-semibold hover:bg-gray-600 transition transform hover:scale-105">
                  <Info size={24} />
                  More Info
                </button>
              </div>
            </div>
          </div>
        ))}
        
        {/* Carousel Controls */}
        <button onClick={prevSlide} className="absolute left-4 top-1/2 -translate-y-1/2 bg-black/50 p-2 rounded-full hover:bg-black/80 transition">
          <ChevronLeft size={32} />
        </button>
        <button onClick={nextSlide} className="absolute right-4 top-1/2 -translate-y-1/2 bg-black/50 p-2 rounded-full hover:bg-black/80 transition">
          <ChevronRight size={32} />
        </button>

        {/* Slide Indicators */}
        <div className="absolute bottom-24 left-1/2 -translate-x-1/2 flex gap-2">
          {heroSlides.map((_, idx) => (
            <button
              key={idx}
              onClick={() => setCurrentSlide(idx)}
              className={h-1 rounded-full transition-all ${idx === currentSlide ? 'w-8 bg-red-600' : 'w-6 bg-gray-500'}}
            />
          ))}
        </div>
      </div>

      {/* Email Signup */}
      <div className="py-20 px-4 bg-black border-t-8 border-gray-900">
        <div className="max-w-3xl mx-auto text-center">
          <h3 className="text-4xl md:text-5xl font-bold mb-6">Unlimited movies, TV shows, and more</h3>
          <p className="text-xl md:text-2xl mb-6">Watch anywhere. Cancel anytime.</p>
          <p className="text-lg mb-6">Ready to watch? Enter your email to create or restart your membership.</p>
          <div className="flex flex-col md:flex-row gap-2 max-w-2xl mx-auto">
            <input
              type="email"
              placeholder="Email address"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              className="flex-1 px-4 py-4 bg-black/50 border border-gray-600 rounded text-white placeholder-gray-400 focus:outline-none focus:border-white"
            />
            <button className="bg-red-600 px-8 py-4 rounded text-xl font-semibold hover:bg-red-700 transition transform hover:scale-105">
              Get Started
            </button>
          </div>
        </div>
      </div>

      {/* Categories */}
      <div className="py-12 px-4">
        <div className="max-w-7xl mx-auto">
          <div className="flex gap-4 mb-8 overflow-x-auto pb-2">
            {categories.map((cat) => (
              <button
                key={cat.id}
                onClick={() => setSelectedCategory(cat.id)}
                className={px-6 py-2 rounded-full whitespace-nowrap transition ${selectedCategory === cat.id ? 'bg-red-600' : 'bg-gray-800 hover:bg-gray-700'}}
              >
                {cat.name}
              </button>
            ))}
          </div>

          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
            {movies[selectedCategory].map((movie) => (
              <div
                key={movie.id}
                className="group relative aspect-[2/3] rounded overflow-hidden cursor-pointer transform transition-all duration-300 hover:scale-110 hover:z-10"
              >
                <div className={absolute inset-0 bg-gradient-to-br ${movie.color}} />
                <div className="absolute inset-0 bg-black/40 group-hover:bg-black/20 transition" />
                <div className="absolute inset-0 flex items-center justify-center p-4">
                  <h4 className="text-center font-bold text-sm md:text-base">{movie.title}</h4>
                </div>
                <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition flex items-center justify-center">
                  <Play size={48} fill="white" />
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Footer */}
      <footer className="py-12 px-4 border-t-8 border-gray-900 bg-black">
        <div className="max-w-7xl mx-auto">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-gray-400">
            <div>
              <p className="mb-2 hover:underline cursor-pointer">FAQ</p>
              <p className="mb-2 hover:underline cursor-pointer">Investor Relations</p>
              <p className="mb-2 hover:underline cursor-pointer">Privacy</p>
            </div>
            <div>
              <p className="mb-2 hover:underline cursor-pointer">Help Center</p>
              <p className="mb-2 hover:underline cursor-pointer">Jobs</p>
              <p className="mb-2 hover:underline cursor-pointer">Cookie Preferences</p>
            </div>
            <div>
              <p className="mb-2 hover:underline cursor-pointer">Account</p>
              <p className="mb-2 hover:underline cursor-pointer">Ways to Watch</p>
              <p className="mb-2 hover:underline cursor-pointer">Corporate Information</p>
            </div>
            <div>
              <p className="mb-2 hover:underline cursor-pointer">Media Center</p>
              <p className="mb-2 hover:underline cursor-pointer">Terms of Use</p>
              <p className="mb-2 hover:underline cursor-pointer">Contact Us</p>
            </div>
          </div>
          <p className="mt-8 text-gray-500 text-sm">© 2025 Netflix Clone Demo</p>
        </div>
      </footer>

      <style jsx>{`
        @keyframes fade-in {
          from { opacity: 0; transform: translateY(20px); }
          to { opacity: 1; transform: translateY(0); }
        }
        .animate-fade-in {
          animation: fade-in 1s ease-out;
        }
      `}</style>
    </div>
  );
}
